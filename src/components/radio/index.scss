@import '../../style/theme.scss';
@import '../../style/mixins.scss';

$radio-prefix-cls: #{$cls-prefix}-radio;
$radio-prefix-cls-inner: #{$radio-prefix-cls}-inner;
$radio-duration: .3s;

.#{$radio-prefix-cls}-wrapper {
  @include reset-component;
  display: inline-block;
  position: relative;
  white-space: nowrap;
  margin-right: 8px;
  cursor: pointer;
}

.#{$radio-prefix-cls} {
  @include reset-component;
  white-space: nowrap;
  outline: none;
  display: inline-block;
  position: relative;
  line-height: 1;
  vertical-align: text-bottom;
  cursor: pointer;
  .#{$radio-prefix-cls}-wrapper:hover &,
  &:hover,
  &-focused {
    .#{$radio-prefix-cls-inner} {
      border-color: $radio-dot-color;
    }
  }
  &-checked::after {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: 1px solid $radio-dot-color;
    content: '';
    animation: antRadioEffect .36s ease-out;
    animation-fill-mode: both;
    visibility: hidden;
  }
  &:hover::after,
  .#{$radio-prefix-cls}-wrapper:hover &:after {
    visibility: visible;
  }
  &-inner {
    position: relative;
    top: 0;
    left: 0;
    display: block;
    box-sizing: border-box;
    width: $radio-size;
    height: $radio-size;
    border-width: 1px;
    border-style: solid;
    border-radius: 100px;
    border-color: $border-color-base;
    background-color: $radio-button-bg;
    transition: all $radio-duration;
    &::after {
      $radio-dot-size: $radio-size - 8px;
      position: absolute;
      width: $radio-dot-size;
      height: $radio-dot-size;
      top: ($radio-size - $radio-dot-size) / 2 - 1px;
      left: ($radio-size - $radio-dot-size) / 2 - 1px;
      border-radius: $radio-dot-size;
      display: table;
      border-top: 0;
      border-left: 0;
      content: '';
      background-color: $radio-dot-color;
      opacity: 0;
      transform: scale(0);
      transition: all $radio-duration $ease-in-out-circ;
    }
  }
  &-input {
    position: absolute;
    left: 0;
    z-index: 1;
    cursor: pointer;
    opacity: 0;
    top: 0;
    bottom: 0;
    right: 0;
  }

  // 选中状态
  &.#{$radio-prefix-cls}-checked {
    .#{$radio-prefix-cls-inner} {
      border-color: $radio-dot-color;
      &::after {
        transform: scale(.875);
        opacity: 1;
        transition: all $radio-duration $ease-in-out-circ;
      }
    }
  }

  // 禁用状态
  &.#{$radio-prefix-cls}-disabled {
    .#{$radio-prefix-cls-inner} {
      border-color: $border-color-base !important;
      background-color: $input-disabled-bg;
      &::after {
        background-color: #ccc;
      }
    }

    .#{$radio-prefix-cls}-input {
      cursor: not-allowed;
    }

    & + span {
      color: $disabled-color;
      cursor: not-allowed;
    }
  }

  & + span, .#{$radio-prefix-cls} + span {
    padding-left: 6px;
    padding-right: 6px;
  }

  @keyframes antRadioEffect {
    0% {
      transform: scale(1);
      opacity: 0.5;
    }
    100% {
      transform: scale(1.6);
      opacity: 0;
    }
  }
}

.#{$radio-prefix-cls}-button-wrapper {
  margin: 0;
  height: $btn-height-base;
  line-height: $btn-height-base - 2px;
  color: $radio-button-color;
  display: inline-block;
  transition: all 0.3s ease;
  cursor: pointer;
  border: $border-width-base $border-style-base $border-color-base;
  border-left: 0;
  border-top-width: $border-width-base + 0.02px;
  background: $radio-button-bg;
  padding: 0 $padding-md - 1px;
  position: relative;

  & > .#{$radio-prefix-cls}-button {
    margin-left: 0;
    display: block;
    width: 0;
    height: 0;
  }

  // .#{$radio-group-prefix-cls}-large & {
  //   height: $input-height-lg;
  //   line-height: $input-height-lg - 2px;
  //   font-size: $font-size-lg;
  // }

  // .#{$radio-group-prefix-cls}-small & {
  //   height: $input-height-sm;
  //   line-height: $input-height-sm - 2px;
  //   padding: 0 $control-padding-horizontal-sm - 1px;
  // }

  &:not(:first-child) {
    &::before {
      content: "";
      display: block;
      top: 0;
      left: -1px;
      width: 1px;
      height: 100%;
      position: absolute;
      background-color: $border-color-base;
    }
  }
  &:first-child {
    border-radius: $border-radius-base 0 0 $border-radius-base;
    border-left: $border-width-base $border-style-base $border-color-base;
  }

  &:last-child {
    border-radius: 0 $border-radius-base $border-radius-base 0;
  }

  &:first-child:last-child {
    border-radius: $border-radius-base;
  }

  &:hover,
  &-focused {
    color: $radio-dot-color;
    position: relative;
  }

  .#{$radio-prefix-cls}-inner,
  input[type="checkbox"],
  input[type="radio"] {
    opacity: 0;
    width: 0;
    height: 0;
  }

  &-checked {
    background: $radio-button-bg;
    border-color: $radio-dot-color;
    color: $radio-dot-color;
    box-shadow: -1px 0 0 0 $radio-dot-color;
    z-index: 1;
    &::before {
      background-color: $radio-dot-color !important;
      opacity: 0.1;
    }
    &:first-child {
      border-color: $radio-dot-color;
      box-shadow: none !important;
    }

    &:hover {
      border-color: $radio-button-hover-color;
      box-shadow: -1px 0 0 0 $radio-button-hover-color;
      color: $radio-button-hover-color;
    }

    &:active {
      border-color: $radio-button-active-color;
      box-shadow: -1px 0 0 0 $radio-button-active-color;
      color: $radio-button-active-color;
    }
  }

  &-disabled {
    border-color: $border-color-base;
    background-color: $input-disabled-bg;
    cursor: not-allowed;
    color: $disabled-color;

    &:first-child,
    &:hover {
      border-color: $border-color-base;
      background-color: $input-disabled-bg;
      color: $disabled-color;
    }
    &:first-child {
      border-left-color: $border-color-base;
    }
  }

  &-disabled.#{$radio-prefix-cls}-button-wrapper-checked {
    color: #fff;
    background-color: #e6e6e6;
    border-color: $border-color-base;
    box-shadow: none;
  }
}